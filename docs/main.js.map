{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./src/Shape.js","webpack:///./src/defaults.js","webpack:///./src/OptionsBuilder.js","webpack:///./src/Stage.js","webpack:///./src/Rect.js","webpack:///./src/LineArt.js","webpack:///./src/index.js","webpack:///./example/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SVG_NS","throwIf","condition","withMessage","Error","getRandomColor","color","random","min","max","Math","floor","bindToContext","context","Array","map","fn","isFunction","_utils","autobindMethods","Shape","width","height","rotateDoration","translateDoration","x","y","rotate","_classCallCheck","this","_data","createElement","setTransform","TypeError","constructor","element","_element","setDataProp","setCenter","setAttribute","cx","cy","_getDataProp","getDataProp","frame","prevFrame","containerWidth","containerHeight","data","nextX","nextRotateDeg","nextY","_Rect","defaultShapeFactory","_ref","Rect","defaultOptions","container","document","body","count","shapeFactory","colorFactory","autoPlay","animDurationRange","shapeWidthRange","shapeHeightRange","_defaults","validators","Element","bgColor","isNaN","length","OptionsBuilder","options","_options","assign","_validate","keys","_validateOption","option","Stage","_svg","_shapes","_configure","index","shape","push","appendChild","$","removeChild","splice","indexOf","concat","removeShape","style","backgroundColor","removeAllShapes","_createElement","createElementNS","display","setViewBox","setBackgroundColor","_Shape2","setSize","setFillColor","LineArt","_OptionsBuilder2","default","_container","_containerRect","getBoundingClientRect","_isPlaying","_rafId","_prevFrame","la","lineArts","lineArt","destroy","addShapes","removeShapes","_createRandomShape","_stage","shapesCount","getShapeAt","setOption","e","console","error","scrumble","window","cancelAnimationFrame","requestAnimationFrame","_tick","pause","removeEventListener","_onWindowResize","_createStage","_bindEvents","play","addEventListener","passive","_this","_containerRect2","_getRandomByRange","_getRandomDurationMiliseconds","addShape","range","apply","renderFrame","_lineArt","$pauseBtn","querySelector","$playBtn","$addShapeBtn","$removeShapeBtn","$restartBtn","$count","art","target"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","const LETTERS = \"0123456789ABCDEF\";\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const throwIf = function (condition, withMessage) {\n    if (condition) {\n        throw new Error(withMessage);\n    }\n}\n\nexport const getRandomColor = function () {\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n        color += LETTERS[random(0, 16)];\n    }\n    return color;\n};\n\nexport const random = function (min, max) {\n    return Math.floor(max - Math.random() * (max - min));\n};\n\nexport const bindToContext = function (bind, context) {\n    if (!(bind instanceof Array)) {\n        bind = [bind];\n    }\n\n    bind.map(fn => context[fn] = context[fn].bind(context));\n};\n\nexport const isFunction = function (fn) {\n    return typeof fn === \"function\";\n}","import { bindToContext, random } from \"./utils\";\n\nconst autobindMethods = [\"renderFrame\"];\n\nexport default class Shape {\n    constructor(width, height, rotateDoration, translateDoration, color, x, y, rotate) {\n        this._data = { width, height, rotateDoration, translateDoration, color, x, y, rotate };\n\n        bindToContext(autobindMethods, this);\n\n        this.createElement();\n\n        this.setTransform(x, y, rotate);\n    }\n\n    get $() {\n        return this._element;\n    }\n\n    createElement() {\n        throw new TypeError(`${this.constructor.name} 'createElement' method is missing`);\n    }\n\n    setDataProp(key, value) {\n        this._data[key] = value;\n    }\n\n    getDataProp(key) {\n        if (!key) return this._data;\n        return this._data[key];\n    }\n\n    setElement(element) {\n        this._element = element;\n    }\n\n    setSize(width, height) {\n        this.setDataProp(\"width\", width);\n        this.setDataProp(\"height\", height);\n\n        this.setCenter(width / 2, height / 2);\n\n        this._element.setAttribute(\"width\", width);\n        this._element.setAttribute(\"height\", height);\n    }\n\n    setFillColor(color) {\n        this.setDataProp(\"color\", color);\n\n        this._element.setAttribute(\"fill\", color);\n    }\n\n    setCenter(cx, cy) {\n        this.setDataProp(\"cx\", cx);\n        this.setDataProp(\"cy\", cy);\n    }\n\n    setTransform(x, y, rotate) {\n        this.setDataProp(\"x\", x);\n        this.setDataProp(\"y\", y);\n        this.setDataProp(\"rotate\", rotate);\n        const { cx, cy } = this.getDataProp();\n\n        this._element.setAttribute(\"transform\", `translate(${x}, ${y}) rotate(${rotate} ${cx} ${cy})`);\n    }\n\n    renderFrame(frame, prevFrame, containerWidth, containerHeight) {\n        const data = this.getDataProp();\n\n        let nextX, nextRotateDeg, nextY = data.y;\n\n        if (data.x >= containerWidth) {\n            nextX = 0 - data.width;\n            nextY = random(0 - data.height, containerHeight)\n            nextRotateDeg = data.rotate;\n        } else {\n            nextX = data.x + (containerWidth / (60 * (data.translateDoration / 1000)));\n            nextRotateDeg = data.rotate + (360 / (60 * (data.rotateDoration / 1000)));\n        }\n\n        this.setTransform(nextX, nextY, nextRotateDeg);\n    }\n}","import { getRandomColor } from \"./utils\";\nimport Rect from \"./Rect\";\n\nexport const defaultShapeFactory = ({ width, height, x, y, rotate, rotateDoration, translateDoration, color }) => {\n    return new Rect(width, height, rotateDoration, translateDoration, color, x, y, rotate);\n};\n\nexport const defaultOptions = {\n    container: document.body,\n    count: 50,\n    shapeFactory: defaultShapeFactory,\n    colorFactory: getRandomColor,\n    autoPlay: true,\n    animDurationRange: [5, 25],\n    shapeWidthRange: [50, 100],\n    shapeHeightRange: [5, 10]\n};","import { defaultOptions } from \"./defaults\";\nimport { throwIf, isFunction, bindToContext } from \"./utils\";\n\nconst autobindMethods = [\"_validateOption\"];\n\nconst validators = {\n    container: (value) => throwIf(!(value instanceof Element), \"`container` must be a valid DOM element\"),\n    bgColor: (value) => throwIf(typeof (value) !== \"string\", \"`bgColor` must be a string\"),\n    count: (value) => throwIf(isNaN(value) || value <= 0, \"`count` must be a positive number\"),\n    shapeFactory: (value) => throwIf(!isFunction(value), \"`shapeFactory` must be a function\"),\n    colorFactory: (value) => throwIf(!isFunction(value), \"`colorFactory` must be a function\"),\n    animDurationRange: (value) => throwIf(!(value instanceof Array) || value.length !== 2, \"`animDurationRange` must be an array with min and max values\"),\n    shapeWidthRange: (value) => throwIf(!(value instanceof Array) || value.length !== 2, \"`shapeWidthRange` must be an array with min and max values\"),\n    shapeHeightRange: (value) => throwIf(!(value instanceof Array) || value.length !== 2, \"`shapeHeightRange` must be an array with min and max values\")\n}\n\nclass OptionsBuilder {\n    constructor(options) {\n        this._options = Object.assign({}, defaultOptions, options);\n\n        bindToContext(autobindMethods, this);\n\n        this._validate();\n    }\n\n    _validate() {\n        Object\n            .keys(this._options)\n            .map(this._validateOption);\n    }\n\n    _validateOption(option) {\n        if (validators[option]) {\n            validators[option](this._options[option])\n        }\n    }\n\n    setOption(key, value) {\n        this._options[key] = value;\n\n        this._validateOption(key);\n    }\n\n    get container() {\n        return this._options.container;\n    }\n\n    get bgColor() {\n        return this._options.bgColor;\n    }\n\n    get count() {\n        return this._options.count;\n    }\n\n    get shapeFactory() {\n        return this._options.shapeFactory;\n    }\n\n    get colorFactory() {\n        return this._options.colorFactory;\n    }\n\n    get autoPlay() {\n        return this._options.autoPlay;\n    }\n\n    get animDurationRange() {\n        return this._options.animDurationRange;\n    }\n\n    get shapeWidthRange() {\n        return this._options.shapeWidthRange;\n    }\n\n    get shapeHeightRange() {\n        return this._options.shapeHeightRange;\n    }\n}\n\nexport default (options) => new OptionsBuilder(options);","import { SVG_NS, bindToContext } from \"./utils\";\n\nconst autobindMethods = [\"removeShape\"];\n\nexport default class Stage {\n    constructor(options) {\n        this._options = options;\n        this._svg = null;\n        this._shapes = [];\n\n        this._configure();\n    }\n\n    get $() {\n        return this._svg;\n    }\n\n    get shapesCount() {\n        return this._shapes.length;\n    }\n\n    getShapeAt(index) {\n        return this._shapes[index];\n    }\n\n    addShape(shape) {\n        this._shapes.push(shape);\n        this._svg.appendChild(shape.$);\n    }\n\n    removeShape(shape) {\n        this._svg.removeChild(shape.$);\n        this._shapes.splice(this._shapes.indexOf(shape), 1);\n    }\n\n    removeAllShapes() {\n        this._shapes.concat().map(this.removeShape);\n    }\n\n    setBackgroundColor(color) {\n        this._svg.style.backgroundColor = color;\n    }\n\n    setViewBox(width, height) {\n        this._svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n    }\n\n    destroy() {\n        this.removeAllShapes();\n    }\n\n    _configure() {\n        bindToContext(autobindMethods, this);\n\n        this._createElement();\n    }\n\n    _createElement() {\n        this._svg = document.createElementNS(SVG_NS, \"svg\");\n        this._svg.style.width = \"100%\";\n        this._svg.style.height = \"100%\";\n        this._svg.style.display = \"block\";\n\n        const { width, height, bgColor } = this._options;\n\n        this.setViewBox(width, height);\n\n        if (bgColor) {\n            this.setBackgroundColor(bgColor);\n        }\n    }\n}","import { SVG_NS } from \"./utils\";\nimport Shape from \"./Shape\";\n\nexport default class Rect extends Shape {\n    createElement() {\n        const { width, height, color } = this.getDataProp();\n\n        this._element = document.createElementNS(SVG_NS, \"rect\");\n\n        this.setSize(width, height);\n\n        this.setFillColor(color);\n    }\n}","import { SVG_NS, random, bindToContext } from \"./utils\";\nimport { defaultOptions } from \"./defaults\";\nimport Stage from \"./Stage\";\nimport optionsBuilder from \"./OptionsBuilder\";\n\nconst autobindMethods = [\"_onWindowResize\", \"_tick\", \"pause\", \"play\", \"addShape\", \"scrumble\", \"removeShape\", \"setOption\", \"destroy\"];\n\nexport default class LineArt {\n    static lineArts = [];\n\n    static create(options) {\n        const la = new LineArt(options);\n\n        LineArt.lineArts.push(la);\n\n        return la;\n    }\n\n    static destroy(lineArt) {\n        lineArt.destroy();\n        LineArt.lineArts.splice(LineArt.lineArts.indexOf(lineArt), 1);\n    }\n\n    constructor(options) {\n        this._options = optionsBuilder(options);\n        this._container = this._options.container;\n        this._containerRect = this._container.getBoundingClientRect();\n        this._isPlaying = false;\n        this._rafId = 0;\n        this._prevFrame = 0;\n\n        this._configure();\n    }\n\n    addShape() {\n        this.addShapes(1);\n    }\n\n    removeShape() {\n        this.removeShapes(1)\n    }\n\n    addShapes(count) {\n        for (let i = 0; i < count; i++) {\n            this._createRandomShape();\n        }\n    }\n\n    removeShapes(count) {\n        if (this._stage.shapesCount < count) {\n            count = this._stage.shapesCount;\n        }\n\n        while ((count--) > 0) {\n            this._stage.removeShape(this._stage.getShapeAt(this._stage.shapesCount - 1));\n        }\n    }\n\n    setOption(key, value) {\n        try {\n            this._options.setOption(key, value);\n        } catch (e) {\n            console.error(e);\n        }\n\n        if (key === \"bgColor\") {\n            this._stage.setBackgroundColor(value);\n        }\n\n        this.scrumble();\n    }\n\n    scrumble() {\n        this._stage.removeAllShapes();\n\n        this.addShapes(this._options.count);\n    }\n\n    pause() {\n        if (!this._isPlaying) {\n            return;\n        }\n\n        this._isPlaying = false;\n        this._prevFrame = 0;\n\n        window.cancelAnimationFrame(this._rafId);\n    }\n\n    play() {\n        if (this._isPlaying) {\n            return;\n        }\n\n        this._isPlaying = true;\n        this._rafId = window.requestAnimationFrame(this._tick);\n    }\n\n    destroy() {\n        this.pause();\n\n        this._stage.destroy();\n\n        this._container.removeChild(this._stage.$);\n\n        window.removeEventListener(\"resize\", this._onWindowResize);\n    }\n\n    _configure() {\n        bindToContext(autobindMethods, this);\n\n        this._createStage();\n\n        this._bindEvents();\n\n        this.addShapes(this._options.count);\n\n        if (this._options.autoPlay) {\n            this.play();\n        }\n    }\n\n    _bindEvents() {\n        window.addEventListener(\"resize\", this._onWindowResize, { passive: true });\n    }\n\n    _onWindowResize() {\n        window.requestAnimationFrame(() => {\n            this._containerRect = this._container.getBoundingClientRect();\n            const { width, height } = this._containerRect;\n            this._stage.setViewBox(width, height);\n        });\n    }\n\n    _createStage() {\n        const { width, height } = this._containerRect;\n\n        this._stage = new Stage({ width, height, bgColor: this._options.bgColor });\n\n        this._container.appendChild(this._stage.$);\n    }\n\n    _createRandomShape() {\n        const width = this._getRandomByRange(this._options.shapeWidthRange)\n            , height = this._getRandomByRange(this._options.shapeHeightRange)\n            , color = this._options.colorFactory()\n            , rotateDoration = this._getRandomDurationMiliseconds()\n            , translateDoration = this._getRandomDurationMiliseconds()\n            , x = random(0 - width, this._containerRect.width)\n            , y = random(0 - height, this._containerRect.height)\n            , rotate = random(0, 360);\n\n        this._stage.addShape(this._options.shapeFactory({\n            width, height, x, y, rotate, rotateDoration, translateDoration, color\n        }));\n    }\n\n    _getRandomDurationMiliseconds() {\n        return this._getRandomByRange(this._options.animDurationRange) * 1000;\n    }\n\n    _getRandomByRange(range) {\n        return random.apply(null, range);\n    }\n\n    _tick(frame) {\n        let count = this._stage.shapesCount;\n\n        while ((count--) > 0) {\n            this._stage\n                .getShapeAt(count)\n                .renderFrame(frame, this._prevFrame, this._containerRect.width, this._containerRect.height);\n        }\n\n        this._prevFrame = frame;\n        this._rafId = window.requestAnimationFrame(this._tick);\n    }\n}","import LineArt from \"./LineArt\";\nimport Shape from \"./Shape\";\nimport { getRandomColor } from \"./utils\";\n\nexport default LineArt;\nexport { Shape, getRandomColor };","import LineArt, { getRandomColor } from \"line-art\";\n\nconst $pauseBtn = document.querySelector(\"#pause\");\nconst $playBtn = document.querySelector(\"#play\");\nconst $addShapeBtn = document.querySelector(\"#add\");\nconst $removeShapeBtn = document.querySelector(\"#remove\");\nconst $restartBtn = document.querySelector(\"#restart\");\nconst $count = document.querySelector(\"#count\");\n\nconst options = {\n    container: document.querySelector(\".demo-1\"),\n    bgColor: \"#5c469f\",\n    count: 100\n};\n\nlet art = LineArt.create(options);\n\n$pauseBtn.addEventListener(\"click\", () => art.pause(), false);\n$playBtn.addEventListener(\"click\", () => art.play(), false);\n$addShapeBtn.addEventListener(\"click\", () => art.addShape(), false);\n$removeShapeBtn.addEventListener(\"click\", () => art.removeShape(), false);\n\n$restartBtn.addEventListener(\"click\", () => {\n    LineArt.destroy(art);\n    art = LineArt.create(options);\n}, false);\n\n$count.addEventListener(\"change\", (e) => {\n    options.count = e.target.value;\n    art.setOption(\"count\", options.count);\n}, false);\n\n$count.value = options.count;"],"sourceRoot":""}